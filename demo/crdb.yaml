apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: crdb1
spec:
  serviceName: "crdb1"
  replicas: 1
  selector:
    matchLabels:
      app: crdb1
  template:
    metadata:
      labels:
        app: crdb1
    spec:
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: crdb1
          image: cockroachdb/cockroach:v23.1.8
          ports:
            - containerPort: 26257 # SQL Port
              name: db
            - containerPort: 8080  # Admin UI
              name: http
          volumeMounts:
            - name: crdb1-data
              mountPath: /cockroach/cockroach-data
          args:
            - "start"
            - "--join=crdb1.cockroachdb.svc.cluster.local:26257"
            - "--advertise-host=$(HOSTNAME).cockroachdb"
            - "--http-addr=0.0.0.0:8080"
            - "--insecure"
          resources:
            limits:
              cpu: "2"
              memory: 8Gi
            requests:
              cpu: "2"
              memory: 8Gi
      volumes:
        - name: crdb1-data
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: crdb1-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
        storageClassName: manual
---
apiVersion: v1
kind: Service
metadata:
  name: crdb1
spec:
  ports:
    - port: 26257
      targetPort: 26257
      name: db
    - port: 8080
      targetPort: 8080
      name: http
  clusterIP: None
  selector:
    app: crdb1
---
apiVersion: v1
kind: Service
metadata:
  name: crdb1-public
spec:
  type: LoadBalancer
  ports:
    - port: 26257
      targetPort: 26257
      name: db
    - port: 8080
      targetPort: 8080
      name: http
  selector:
    app: crdb1