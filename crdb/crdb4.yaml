apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: crdb4
  namespace: linus
spec:
  serviceName: "crdb4"
  replicas: 4
  selector:
    matchLabels:
      app: crdb4
  template:
    metadata:
      labels:
        app: crdb4
    spec:
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: crdb4
          image: cockroachdb/cockroach:v23.1.8
          ports:
            - containerPort: 26257 # SQL Port
              name: db
            - containerPort: 8080  # Admin UI
              name: http
          volumeMounts:
            - name: crdb4-data
              mountPath: /cockroach/cockroach-data
          command:
           - "/bin/bash"
           - "-ecx"
           # The use of qualified `hostname -f` is crucial:
           # Other nodes aren't able to look up the unqualified hostname.
           - exec
             /cockroach/cockroach
             start
             --logtostderr
             --insecure
             --advertise-host $(hostname -f)
             --http-addr 0.0.0.0
             --join crdb4-0.cockroachdb.cockroachdb.svc.cluster.local
          resources:
            limits:
              cpu: "2"
              memory: 8Gi
            requests:
              cpu: "2"
              memory: 8Gi
      volumes:
        - name: crdb4-data
          emptyDir: {}
  podManagementPolicy: Parallel
  updateStrategy:
    type: 
      RollingUpdate
  volumeClaimTemplates:
    - metadata:
        name: crdb4-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
        storageClassName: manual
---
apiVersion: v1
kind: Service
metadata:
  name: crdb4
  namespace: linus
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    prometheus.io/scrape: "true"
    prometheus.io/path: "_status/vars"
    prometheus.io/port: "8089"
spec:
  ports:
    - port: 26257
      targetPort: 26257
      name: db
    - port: 8089
      targetPort: 8089
      name: http
  clusterIP: None
  publishNotReadyAddresses: true
  selector:
    app: crdb4
---
apiVersion: v1
kind: Service
metadata:
  name: crdb4-public
  namespace: linus
spec:
  type: LoadBalancer
  ports:
    - port: 26257
      targetPort: 26257
      name: db
    - port: 8080
      targetPort: 8080
      name: http
  selector:
    app: crdb4